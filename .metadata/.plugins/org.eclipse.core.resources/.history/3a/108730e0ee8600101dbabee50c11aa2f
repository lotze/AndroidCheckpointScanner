package com.thomaslotze.survivedc;

import java.io.ByteArrayOutputStream;

import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import android.content.ContentValues;
import android.database.sqlite.SQLiteDatabase;
import android.location.Location;

public class RunnerCheckinUploader implements Runnable {
	String runnerId;
	String checkpointId;
	String deviceId;
	Integer timestamp;
	Location location;
	SQLiteDatabase db;

	public RunnerCheckinUploader(String runnerId, String checkpointId,
			String deviceId, Integer timestamp, Location location,
			SQLiteDatabase db) {
		super();
		this.runnerId = runnerId;
		this.checkpointId = checkpointId;
		this.deviceId = deviceId;
		this.timestamp = timestamp;
		this.location = location;
		this.db = db;
	}

	@Override
	public void run() {
		String latString="";
		String lonString="";
		if (location != null) {
			latString = ((Double)location.getLatitude()).toString();
			lonString = ((Double)location.getLongitude()).toString();
		}
    	String timeString = new Integer(timestamp).toString();
	    String urlString = "http://thomaslotze.com/survivedc/checkpoint.cgi?cid=" + java.net.URLEncoder.encode(checkpointId) + "&rid=" + java.net.URLEncoder.encode(runnerId) + "&did=" + java.net.URLEncoder.encode(deviceId) + "&lat=" + java.net.URLEncoder.encode(latString) + "&lon=" + java.net.URLEncoder.encode(lonString) + "&ts=" + java.net.URLEncoder.encode(timeString);
		HttpClient httpclient = new DefaultHttpClient();
	    HttpResponse response = httpclient.execute(new HttpGet(urlString));
	    StatusLine statusLine = response.getStatusLine();
	    if(statusLine.getStatusCode() == HttpStatus.SC_OK){
	        ByteArrayOutputStream out = new ByteArrayOutputStream();
	        response.getEntity().writeTo(out);
	        out.close();
	        String responseString = out.toString();
	        ContentValues successValues = new ContentValues(1);
	        successValues.put("is_uploaded", 1);	            	
	    	db.update("runners", successValues, "runner_id='" + runnerId + "'", null);
	    } else{
	        //Closes the connection.
	        response.getEntity().getContent().close();
	    }
	}

}
